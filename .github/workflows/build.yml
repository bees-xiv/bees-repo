name: Build

on:
  schedule:
    - cron: "20 */6 * * *"
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
    inputs:
      rebuild_all:
        description: "Rebuild all plugins"
        required: false
        default: "false"

concurrency:
  group: "build"
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ github.token }}
  skip_build:

jobs:
  run-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checkout bees-build repository
        uses: actions/checkout@v4
        with:
          repository: bees-xiv/bees-build
          token: ${{ secrets.BEES_BUILD_PAT }}
          path: "bees-build"
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Check if rebuild is needed
        run: |
          rebuild_arg=""
          if [[ "${{ github.event.inputs.rebuild_all }}" == "true" ]]; then
            rebuild_arg="--rebuild-all"
          fi
          bun bees-build/build.ts --check-only $rebuild_arg || exit_code=$?
          if [ "$exit_code" -eq 69 ]; then
            echo "skip_build=true" >> $GITHUB_ENV
          fi
          exit 0
      - name: Setup .NET
        if: env.skip_build != 'true'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.303 # usually 9.0.x, except 9.0.304 fucking breaks autoretainer build. fuck yourself msft.
      - name: Download Dalamud
        if: env.skip_build != 'true'
        run: |
          curl -o latest.zip https://goatcorp.github.io/dalamud-distrib/stg/latest.zip
          mkdir -p ~/.xlcore/dalamud/Hooks/dev/
          unzip latest.zip -d ~/.xlcore/dalamud/Hooks/dev/
      - name: Run build script
        if: env.skip_build != 'true'
        run: |
          rebuild_arg=""
          if [[ "${{ github.event.inputs.rebuild_all }}" == "true" ]]; then
            rebuild_arg="--rebuild-all"
          fi
          bun bees-build/build.ts $rebuild_arg || exit_code=$?
          if [ "$exit_code" -eq 69 ]; then
            echo "skip_build=true" >> $GITHUB_ENV
          fi
          exit 0
      - name: Commit changes to plugins.json and repo.json
        if: env.skip_build != 'true'
        run: |
          git config user.name "Github Actions"
          git config user.email "actions@github.com"
          git add ./plugins.json ./repo.json
          if ! git diff --cached --quiet; then
            git commit -m "Update plugins.json and repo.json"
            git push origin main
          else
            echo "No changes to commit."
          fi
      - name: Clean up old releases and create new release
        if: env.skip_build != 'true'
        run: |
          oldReleases=$(gh release list --repo ${{ github.repository }} --json tagName --jq '.[].tagName')

          for release in $oldReleases; do
            gh release delete "$release" --repo ${{ github.repository }} --yes
          done

          gh release create "v$(date +'%Y.%m.%d.%H%M%S')" bees-build-dist/* \
            --title "bees-relees" \
            --notes ""
